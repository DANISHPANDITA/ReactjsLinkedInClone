[{"F:\\LinkedInClone\\src\\index.js":"1","F:\\LinkedInClone\\src\\App.js":"2","F:\\LinkedInClone\\src\\serviceWorker.js":"3","F:\\LinkedInClone\\src\\app\\store.js":"4","F:\\LinkedInClone\\src\\Navbar.js":"5","F:\\LinkedInClone\\src\\Body.js":"6","F:\\LinkedInClone\\src\\NavBarIcons.js":"7","F:\\LinkedInClone\\src\\BodyLeft.js":"8","F:\\LinkedInClone\\src\\BodyRight.js":"9","F:\\LinkedInClone\\src\\Feeds.js":"10","F:\\LinkedInClone\\src\\InputFeedIcon.js":"11","F:\\LinkedInClone\\src\\FeedPost.js":"12","F:\\LinkedInClone\\src\\features\\counterSlice.js":"13","F:\\LinkedInClone\\src\\Login.js":"14","F:\\LinkedInClone\\src\\Register.js":"15","F:\\LinkedInClone\\src\\firebase.js":"16"},{"size":644,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":1364,"mtime":1612882578799,"results":"19","hashOfConfig":"18"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":186,"mtime":1612798096780,"results":"21","hashOfConfig":"18"},{"size":3597,"mtime":1612882748471,"results":"22","hashOfConfig":"18"},{"size":316,"mtime":1612754404273,"results":"23","hashOfConfig":"18"},{"size":277,"mtime":1612751224603,"results":"24","hashOfConfig":"18"},{"size":1871,"mtime":1612881828425,"results":"25","hashOfConfig":"18"},{"size":1455,"mtime":1612878315150,"results":"26","hashOfConfig":"18"},{"size":4844,"mtime":1612882540815,"results":"27","hashOfConfig":"18"},{"size":217,"mtime":1612774833740,"results":"28","hashOfConfig":"18"},{"size":2822,"mtime":1612881595591,"results":"29","hashOfConfig":"18"},{"size":1036,"mtime":1612797292335,"results":"30","hashOfConfig":"18"},{"size":1912,"mtime":1612882140981,"results":"31","hashOfConfig":"18"},{"size":5975,"mtime":1612849152904,"results":"32","hashOfConfig":"18"},{"size":628,"mtime":1612746549858,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"h3000e",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"F:\\LinkedInClone\\src\\index.js",[],["68","69"],"F:\\LinkedInClone\\src\\App.js",[],"F:\\LinkedInClone\\src\\serviceWorker.js",[],"F:\\LinkedInClone\\src\\app\\store.js",[],"F:\\LinkedInClone\\src\\Navbar.js",[],"F:\\LinkedInClone\\src\\Body.js",[],"F:\\LinkedInClone\\src\\NavBarIcons.js",[],"F:\\LinkedInClone\\src\\BodyLeft.js",[],"F:\\LinkedInClone\\src\\BodyRight.js",["70","71"],"F:\\LinkedInClone\\src\\Feeds.js",["72","73"],"F:\\LinkedInClone\\src\\InputFeedIcon.js",[],"F:\\LinkedInClone\\src\\FeedPost.js",[],"F:\\LinkedInClone\\src\\features\\counterSlice.js",[],"F:\\LinkedInClone\\src\\Login.js",[],"F:\\LinkedInClone\\src\\Register.js",["74"],"import { AddToPhotosRounded } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"./features/counterSlice\";\r\nimport { auth, storage } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"./Register.css\";\r\n\r\nfunction Register() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [progress, setprogress] = useState(\"\");\r\n  const [registerName, setregisterName] = useState(\"\");\r\n  const [registerMail, setregisterMail] = useState(\"\");\r\n  const [passwordReg, setpasswordReg] = useState(\"\");\r\n  const [passwordConf, setpasswordConf] = useState(\"\");\r\n  const [photo, setphoto] = useState(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  function buildPhotoSelector() {\r\n    const fileSelector = document.createElement(\"input\");\r\n    fileSelector.setAttribute(\"type\", \"file\");\r\n    fileSelector.setAttribute(\"accept\", \"image/jpg, image/png\");\r\n    return fileSelector;\r\n  }\r\n\r\n  const Selectphoto = (e) => {\r\n    e.preventDefault();\r\n    const fileSelector = buildPhotoSelector();\r\n    fileSelector.click();\r\n    fileSelector.addEventListener(\"change\", (event) => {\r\n      const file = event.target.files[0];\r\n      setphoto(file);\r\n    });\r\n  };\r\n  const onSubmit = (data) => {\r\n    if (passwordConf === passwordReg) {\r\n      console.log(data);\r\n      console.log(photo);\r\n      if (photo) {\r\n        const uploadTask = storage.ref(`media/${photo}.name}`).put(photo);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            var progress = Math.floor(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            console.log(\"Upload is \" + progress + \"% done\");\r\n            setprogress(progress);\r\n            switch (snapshot.state) {\r\n              case firebase.storage.TaskState.PAUSED:\r\n                console.log(\"Upload is paused\");\r\n                break;\r\n              case firebase.storage.TaskState.RUNNING:\r\n                console.log(\"Upload is running\");\r\n                break;\r\n              default:\r\n                console.log(\"..\");\r\n            }\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n              auth\r\n                .createUserWithEmailAndPassword(registerMail, passwordReg)\r\n                .then((userCredential) => {\r\n                  // Signed in\r\n                  var user = userCredential.user;\r\n                  console.log(user);\r\n                  user.updateProfile({\r\n                    displayName: registerName,\r\n                    photoURL: downloadURL,\r\n                  });\r\n                  dispatch(\r\n                    login({\r\n                      Name: registerName,\r\n                      email: user.email,\r\n                      ProfilePic: downloadURL,\r\n                      uid: user.uid,\r\n                    })\r\n                  );\r\n                })\r\n                .catch((error) => {\r\n                  var errorCode = error.code;\r\n                  var errorMessage = error.message;\r\n                  console.log(errorCode);\r\n                  console.log(errorMessage);\r\n                });\r\n              setregisterName(\"\");\r\n              setregisterMail(\"\");\r\n              setphoto(null);\r\n              setpasswordConf(\"\");\r\n              setpasswordReg(\"\");\r\n              history.push(\"/\");\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        alert(\"Passwords don't match\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"registerPage\">\r\n      <img\r\n        src=\"https://www.cbronline.com/wp-content/uploads/2016/06/linkedin.jpg\"\r\n        alt=\"\"\r\n        className=\"RegisterLogo\"\r\n      />\r\n      <form className=\"registerForm\" onSubmit={handleSubmit(onSubmit)}>\r\n        <input\r\n          name=\"Name\"\r\n          ref={register({ required: true })}\r\n          value={registerName}\r\n          onChange={(e) => setregisterName(e.target.value)}\r\n          className=\"NameRegister\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Name\"\r\n        />\r\n        {errors.Name && (\r\n          <span className=\"errorField\">This field is required</span>\r\n        )}\r\n        <input\r\n          name=\"Email\"\r\n          ref={register({ required: true })}\r\n          className=\"EmailRegister\"\r\n          value={registerMail}\r\n          onChange={(e) => setregisterMail(e.target.value)}\r\n          placeholder=\"E-Mail\"\r\n          type=\"email\"\r\n        />\r\n        {errors.Email && (\r\n          <span className=\"errorField\">This field is required</span>\r\n        )}\r\n        <input\r\n          name=\"Password\"\r\n          ref={register({ required: true })}\r\n          className=\"setPassword\"\r\n          value={passwordReg}\r\n          onChange={(e) => setpasswordReg(e.target.value)}\r\n          placeholder=\"Set-Password\"\r\n          type=\"password\"\r\n        />\r\n        {errors.Password && (\r\n          <span className=\"errorField\">This field is required</span>\r\n        )}\r\n        <input\r\n          name=\"PasswordConfirm\"\r\n          ref={register({ required: true })}\r\n          className=\"setPassword\"\r\n          value={passwordConf}\r\n          onChange={(e) => setpasswordConf(e.target.value)}\r\n          placeholder=\"Confirm-Password\"\r\n          type=\"password\"\r\n        />\r\n        {errors.PasswordConfirm && (\r\n          <span className=\"errorField\">This field is required</span>\r\n        )}\r\n        <div className=\"fileinput\">\r\n          <AddToPhotosRounded className=\"fileInputIconPhoto\" />\r\n          <p onClick={Selectphoto}>Choose Photo</p>\r\n        </div>\r\n\r\n        <button className=\"RegisterButton\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","F:\\LinkedInClone\\src\\firebase.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"79","severity":1,"message":"84","line":22,"column":10,"nodeType":"81","messageId":"82","endLine":22,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":24,"column":17,"nodeType":"81","messageId":"82","endLine":24,"endColumn":25},{"ruleId":"79","severity":1,"message":"84","line":13,"column":10,"nodeType":"81","messageId":"82","endLine":13,"endColumn":18},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ArrowDownward' is defined but never used.","'progress' is assigned a value but never used.","'setlikes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]